<?php

namespace App\Admin\Controllers;

use App\Models\Master;
use App\Repositories\MasterRepository;
use Encore\Admin\Controllers\AdminController;
use Encore\Admin\Form;
use Encore\Admin\Grid;
use Encore\Admin\Layout\Content;
use Encore\Admin\Show;

class MasterController extends AdminController
{
    /**
     * Title for current resource.
     *
     * @var string
     */
    protected $title = '师傅管理';

    /**
     * Make a grid builder.
     *
     * @return Grid
     */
    protected function grid()
    {
        $grid = new Grid(new Master);
        $grid->actions(function (Grid\Displayers\Actions $actions) {
            /**@var Master $user */
            $user = $actions->row;
            $forbiddenDisable = ($user->status === 0 ? 'disabled' : '');
            $freezeDisable = ($user->status === 1 ? 'disabled' : '');
            $actions->disableDelete();
            $actions->disableEdit();
            $actions->append("<a {$forbiddenDisable} class='btn btn-sm btn-primary user-status-opt user-forbidden' data-name = '{$user->name}' data-id='{$user->id}' data-status = '0'>禁止</a>");
            $actions->append("<a {$freezeDisable} class='btn btn-sm btn-primary user-status-opt user-freeze' data-name = '{$user->name}' data-id='{$user->id}' data-status='1' >启用</a>");
        });
        $grid->disableCreateButton();
        $grid->column('id', 'ID');
        $grid->column('name', '用户名');
        $grid->column('real_name', '姓名');
        $grid->column('mobile', '手机');
        $grid->column('balance', '账户余额')->display(function ($value) {
            return number_format($value, 2);
        });
        $grid->column('offerOrders', '接单数')->display(function ($value) {
            return $value ? count($value) : 0;
        });

        $grid->column('runningOrders', '服务中的工单')->display(function ($value) {
            return $value ? count($value) : 0;
        });

        $grid->column('completedOrders', '完成的工单')->display(function ($value) {
            return $value ? count($value) : 0;
        });

        $grid->column('email', '邮箱');
        $this->formCSRFToken();
        $this->updateUserStatusScript();
        return $grid;
    }

    public function updateStatus($masterId, MasterRepository $masterRepository)
    {
        $master = $masterRepository->find($masterId);
        if ($master) {
            $master->status = request('status', !$master->status);
            $master->save();
            return $this->response->array(['message' => '更新成功']);
        } else {
            return $this->response->errorNotFound('没找到对应用户');
        }
    }

    protected function formCSRFToken()
    {
        $token = csrf_token();
        $script = <<<SCRIPT
 $.ajaxSetup({headers: {'X-CSRF-TOKEN': '$token'}});
SCRIPT;
        Admin::script($script);
    }

    protected function updateUserStatusScript()
    {

        $script = <<<SCRIPT
         $(document).on('click', '.user-status-opt', function(){
            let id = $(this).data('id');
            let name = $(this).data('name');
            let status = $(this).data('status');
            let message = status > 0 ? '确定解除禁止此用户' : '确定禁止此用户';
            let alertMessage = name + (status > 0 ? '已经解除禁止': '已经被禁止');
            swal(message).then(() => {
                $.ajax({
                    url: 'masters/'+id + '/status/update', 
                    method: 'PUT',
                    data: {'status': status},
                    dataType: 'json',
                    success: (res) => { 
                        if(res) {
                            swal(alertMessage).then(() => {
                                location.reload();
                            });
                        } 
                    }
                });
             });
         });
SCRIPT;
        Admin::script($script);
    }

    /**
     * Make a show builder.
     *
     * @param mixed $id
     * @return Show
     */
    protected function detail($id)
    {
        $show = new Show(Master::findOrFail($id));
        return $show;
    }

    public function show($id, Content $content)
    {
        $master = Master::find($id);
        $offerOrders = $master->offerOrders;
        return $content
            ->title('师傅详细信息')
            ->view('admin.masters.show', [
                'master' => $master,
                'offerOrders' => $offerOrders
                ]); // TODO: Change the autogenerated stub
    }
}
